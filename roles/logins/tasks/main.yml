---
- name: 'Create cron job to restart systemd-logind regularly as workaround for known DBus bug.'
  ansible.builtin.cron:
    #
    # Silly workaround for bug in interaction dbus <-> logind
    # Need DBus 1.11.10 for a fix, but CentOS 7.6 is stuck on dbus 1.10.24.
    #
    name: 'Restart systemd-logind'
    minute: '*/10'
    user: root
    job: '/bin/systemctl restart systemd-logind'
    cron_file: restart_logind
  become: true

- name: 'Patch /etc/pam.d/sshd to allow logins from users in the admin group using ssh even when /etc/nologin is present.'
  ansible.builtin.lineinfile:
    path: '/etc/pam.d/sshd'
    insertbefore: '^account(\s+)required(\s+)pam_nologin.so'
    regexp: '^account(\s+)\[default=ignore(\s+)success=1\](\s+)pam_succeed_if.so(\s+)quiet(\s+)user(\s+)ingroup(\s+)admin'
    line: 'account    [default=ignore success=1] pam_succeed_if.so quiet user ingroup admin'
    owner: 'root'
    group: 'root'
    mode: '0644'
  become: true

- name: 'Install yum dependencies.'
  ansible.builtin.yum:
    state: 'latest'
    update_cache: true
    name:
      - pam_script
      - oddjob-mkhomedir
  notify:
    - authconfig_enable_mkhomedir
    - restart_oddjobd
  become: true

- name: 'Enable pam_script.'
  ansible.builtin.file:  # noqa risky-file-permissions
    src: 'pam_script'
    dest: "/etc/{{ item }}"
    state: link
  with_items:
    - pam_script_acct
    - pam_script_auth
    - pam_script_passwd
    - pam_script_ses_close
    - pam_script_ses_open
  become: true

- name: 'Create /etc/pam-script.d/ dir.'
  ansible.builtin.file:
    name: '/etc/pam-script.d'
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

- name: 'Install login_checks_regular_home.sh script.'
  ansible.builtin.copy:
    src: login_checks_regular_home.sh
    dest: /etc/pam-script.d/login_checks_regular_home.sh
    owner: root
    group: root
    mode: '0755'
  when:
    - inventory_hostname in groups['jumphost'] | default([]) or
      inventory_hostname in groups['data_transfer'] | default([]) or
      inventory_hostname in groups['cluster'] | default([])
  become: true

- name: 'Enable login_checks.sh script for ses_open.'
  ansible.builtin.file:  # noqa risky-file-permissions
    src: "{{ item }}"
    dest: "/etc/pam-script.d/{{ item }}_ses_open"
    owner: root
    group: root
    state: link
  with_items:
    - login_checks_regular_home.sh
  when:
    - inventory_hostname in groups['jumphost'] | default([]) or
      inventory_hostname in groups['data_transfer'] | default([]) or
      inventory_hostname in groups['cluster'] | default([])
  become: true

- name: 'Install login_checks_chrooted_home.sh script.'
  ansible.builtin.template:
    src: login_checks_chrooted_home.sh
    dest: /etc/pam-script.d/login_checks_chrooted_home.sh
    owner: root
    group: root
    mode: '0755'
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Enable login_checks_chrooted_home.sh script for ses_open.'
  ansible.builtin.file:  # noqa risky-file-permissions
    src: login_checks_chrooted_home.sh
    dest: /etc/pam-script.d/login_checks_chrooted_home.sh_ses_open
    owner: root
    group: root
    state: link
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Install recycle-chrooted-home-for-expired-account.bash script in /root/.'
  ansible.builtin.template:
    src: recycle-chrooted-home-for-expired-account.bash
    dest: /root/recycle-chrooted-home-for-expired-account.bash
    owner: root
    group: root
    mode: '0750'
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Create cron job to run recycle-chrooted-home-for-expired-account.bash script daily.'
  ansible.builtin.cron:
    name: 'Recycle chrooted home dirs for expired users in the {{ data_transfer_only_group }} group.'
    weekday: '*'
    hour: '05'
    minute: '30'
    user: root
    job: /root/recycle-chrooted-home-for-expired-account.bash -c
    cron_file: recycle-chrooted-home-for-expired-account
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Set tiny quota for regular users on the root partition.'
  ansible.builtin.include_tasks:
    file: tiny-user-quota-on-root-partition.yml
  when:
    - inventory_hostname in groups['jumphost'] | default([]) or
      inventory_hostname in groups['data_transfer'] | default([])

- name: 'Enable services.'
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
    daemon_reload: true
  with_items:
    - dbus.service
    - oddjobd.service
  notify:
    - restart_oddjobd
  become: true

- name: 'Create custom /etc/pam.d/password-auth-local to include pam_script.so.'
  ansible.builtin.copy:
    src: password-auth-local
    dest: /etc/pam.d/password-auth-local
    owner: root
    group: root
    mode: '0600'
  become: true

#
# This patches old/outdated setups where pam_script.so was added to password-auth-ac.
# The authconfig utility does not support pam_script.so and when it is used in other roles
# to update password-auth-ac, custom settings like including pam_script.so will get lost.
#
- name: 'Remove pam_script.so from /etc/pam.d/password-auth-ac.'
  ansible.builtin.lineinfile:
    path: /etc/pam.d/password-auth-ac
    state: absent
    regexp: 'pam_script.so'
  become: true

- name: 'Enable custom /etc/pam.d/password-auth-local.'
  ansible.builtin.file:  # noqa risky-file-permissions
    src: /etc/pam.d/password-auth-local
    dest: /etc/pam.d/password-auth
    owner: root
    group: root
    state: link
  become: true

- name: 'Check if we need to update authconfig.'
  ansible.builtin.command:
    cmd: /usr/sbin/authconfig --test
  register: authconfig_test
  changed_when: ('pam_oddjob_mkhomedir is disabled' in authconfig_test.stdout)
  notify:
    - authconfig_enable_mkhomedir
    - restart_oddjobd
...
