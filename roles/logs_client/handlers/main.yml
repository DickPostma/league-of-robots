---
- name: Restart server firewall
  ansible.builtin.command:
    /etc/sysconfig/iptables-init.bash
  register: fw_reg
  changed_when: fw_reg.rc == 0
  delegate_to: "{% if groups['jumphost'] | first != inventory_hostname %}{{ groups['jumphost'] | first }}+{% endif %}{{ item }}"
  loop: "{{ logs_class_servers }}"
  become: true
  notify: client_restart_rsyslog
  listen: restart_server_firewall
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Restart server rsyslog.service
  ansible.builtin.service:
    name: rsyslog.service
    state: restarted
  delegate_to: "{% if groups['jumphost'] | first != inventory_hostname %}{{ groups['jumphost'] | first }}+{% endif %}{{ item }}"
  loop: "{{ logs_class_servers }}"
  become: true
  listen: restart_server_rsyslog
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Force client systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: true
  become: true
  listen: systemd_reload

- name: Restart client rsyslog.service
  ansible.builtin.service:
    name: rsyslog.service
    state: restarted
  listen: client_restart_rsyslog
  become: true

- name: Start and enable client rsyslog.service
  ansible.builtin.service:
    name: rsyslog.service
    state: started
    enabled: true
  become: true
  listen: rsyslog_enable
...
