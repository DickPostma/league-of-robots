#jinja2: trim_blocks:False
#####################################
# Note about logging.
#####################################
# Logging is set to
#     debug_level = 3
# in this config file for all config sections.
# Level 3 will report all 4 types of errors: fatal, critical, serious and minor.
# There is no need to change the debug_level values here for more fine grained logging during debugging;
# Simply use the
#     sssctl debug-level [0-9]
# command to change the log level on the fly:
#   * There is no need to restart sssd, but
#   * do not forget to set it back to the default to prevent flooding the logs in /var/log/sssd/.
#####################################

[sssd]
config_file_version = 2
services = nss, pam, ssh
#
# SSSD will not start if you do not configure any domains.
# Add new domain configurations as [domain/<NAME>] sections,
# and add them to the list of domains in the "domains" attribute below
# in the order you want them to be queried.
#
domains = {% for ldap_domain, ldap_config in ldap_domains.items() %}{{ ldap_domain }}{% if not loop.last %},{% endif %}{% endfor %}
full_name_format = %1$s
re_expression = (^(?P<name>.+)$)
debug_level = 3

[nss]
filter_groups = root
filter_users = root
default_shell = /bin/bash
debug_level = 3

[pam]
debug_level = 3

[ssh]
debug_level = 3

#
# LDAP Domains.
#
# ldap_schema can be set to
#  * rfc2307:    stores group member names in the "memberuid" attribute
#  * rfc2307bis: stores group member DNs in the "member" attribute.
#
# Note that enabling enumeration will have a moderate performance impact.
# Therefore, the default value for enumeration is FALSE, but we need it:
# E.g. ansible.builtin.user module requires all groups to be listed.
# Refer to the sssd.conf man page for full details.
#
{% for ldap_domain, ldap_config in ldap_domains.items() %}
[domain/{{ ldap_domain }}]
id_provider = ldap
auth_provider = ldap
ldap_uri = {{ ldap_config['uri'] }}
ldap_search_base = {{ ldap_config['base'] }}
ldap_default_bind_dn = {{ ldap_credentials[ldap_domain]['readonly']['dn'] }}
ldap_default_authtok = {{ ldap_credentials[ldap_domain]['readonly']['pw'] }}
ldap_schema = {{ ldap_config['schema'] }}
ldap_user_name = {{ ldap_config['user_name'] }}
ldap_user_member_of = {{ ldap_config['user_member_of'] }}
#auto_private_groups = true
ldap_user_ssh_public_key = {{ ldap_config['user_ssh_public_key'] }}
ldap_group_member = {{ ldap_config['group_member'] }}
{% if ldap_config['min_id'] is defined and ldap_config['min_id'] >= 1000 -%}
min_id = {{ ldap_config['min_id'] }}
{% endif -%}
{% if ldap_config['max_id'] is defined and ldap_config['max_id'] >= 1000 -%}
max_id = {{ ldap_config['max_id'] }}
{% endif -%}
enumerate = true
cache_credentials = false
ldap_tls_reqcert = demand
ldap_tls_cacert = /etc/pki/tls/certs/ca-bundle.trust.crt
#ldap_tls_cipher_suite = HIGH:MEDIUM  # SSSD uses OpenSSL style cipher suites.
debug_level = 3
{% endfor %}
