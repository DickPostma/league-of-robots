---
- name: Create a mount point directory if it does not already exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: '0550'        # protect as much as possible accidental writing into this folder
    owner: root
    group: root
    # attributes: +i    # man chattr / prevent from anyone to write to this disk
    force: false
  when: ansible_mounts | selectattr('mount', 'equalto', item.path) | list | length == 0 and
        soft_partitions | selectattr('hostname', 'equalto', inventory_hostname) | list | length > 0
  with_items: "{{ soft_partitions }}"
  become: true

- name: Create a disk image file, to be later formated and mounted - this will take some time ...
  community.general.filesize:
    path: "{{ item.src }}"
    size: "{{ item.size }}G"
    mode: '0550'
    owner: root
    group: root
    force: false
  with_items: "{{ soft_partitions }}"
  when: ansible_mounts | selectattr('mount', 'equalto', item.path) | list | length == 0 and
        soft_partitions | selectattr('hostname', 'equalto', inventory_hostname) | list | length > 0
  become: true

- name: Create filesystem in the disk image.
  community.general.filesystem:
    force: false        # prevent formatting the existing filesystem!
    fstype: "{{ item.fstype }}"
    dev: "{{ item.src }}"
  with_items: "{{ soft_partitions }}"
  when: ansible_mounts | selectattr('mount', 'equalto', item.path) | list | length == 0 and
        soft_partitions | selectattr('hostname', 'equalto', inventory_hostname) | list | length > 0
  become: true

- name: Mount a loop volume
  ansible.posix.mount:
    src: "{{ item.src }}"
    path: "{{ item.path }}"
    opts: loop
    state: mounted
    fstype: "{{ item.fstype }}"
  with_items: "{{ soft_partitions }}"
  when: ansible_mounts | selectattr('mount', 'equalto', item.path) | list | length == 0 and
        soft_partitions | selectattr('hostname', 'equalto', inventory_hostname) | list | length > 0
  become: true

- name: Set the mount point directory permissions, user and group ownership
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.user }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    force: false        # don't change if not needed
  with_items: "{{ soft_partitions }}"
  when: ansible_mounts | selectattr('mount', 'equalto', item.path) | list | length == 0 and
        soft_partitions | selectattr('hostname', 'equalto', inventory_hostname) | list | length > 0
  become: true
...
