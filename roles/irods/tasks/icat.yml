---
- name: create_unattended_installation_json
  ansible.builtin.template:
    src: unattended_install.json.j2
    dest: /root/unattended_install.json
    backup: true
    mode: '0600'
  register: create_unattended_installation_json
  become: true

- name: Collect list of tables from existing irods database
  ansible.builtin.command: 'psql -c "\dt" -U {{ ir_db_user }} -d {{ ir_db_name }} -h {{ ir_db_server }} -w'
  changed_when: false
  failed_when: 'database_tables.rc > 0'
  register: database_tables
  become_user: '{{ ir_service_account }}'
  become: true

- name: Install iRODS, if no tables exist in the database
  ansible.builtin.command: sudo python /var/lib/irods/scripts/setup_irods.py --json_configuration_file=/root/unattended_install.json
  when: database_tables.stdout_lines | default([]) | length > 0 and database_tables.stdout is search(".*No relations found.*")
  register: install_status
  failed_when: install_status.rc > 0
  run_once: true
  async: 120
  poll: 1
  become_user: '{{ ir_service_account }}'
  become: true
  notify: irodsctl_restart

- name: Edit /etc/irods/core.re to enforce the use of the certificates
  ansible.builtin.lineinfile:
    name: /etc/irods/core.re
    search_string: 'acPreConnect(*OUT) { *OUT="CS_NEG_DONT_CARE"; }'
    line: 'acPreConnect(*OUT) { *OUT="{{ ir_client_server_policy }}"; }'
    backup: true
  become: true

- name: Edit /etc/irods/core.re to set number of threads to 4
  ansible.builtin.lineinfile:
    name: /etc/irods/core.re
    search_string: 'acSetNumThreads {msiSetNumThreads("default","default","default"); }'
    line: 'acSetNumThreads {msiSetNumThreads("default","4","default"); }'
    backup: true
  become: true

- name: Edit /etc/irods/core.re to set default resource
  ansible.builtin.lineinfile:
    name: /etc/irods/core.re
    search_string: 'acSetRescSchemeForCreate {msiSetDefaultResc("demoResc","null"); }'
    line: 'acSetRescSchemeForCreate {msiSetDefaultResc("{{ ir_default_res }}","null"); }'
    backup: true
  become: true

- name: Edit /etc/irods/core.re to set default replication resource
  ansible.builtin.lineinfile:
    name: /etc/irods/core.re
    search_string: 'acSetRescSchemeForRepl {msiSetDefaultResc("demoResc","null"); }'
    line: 'acSetRescSchemeForRepl {msiSetDefaultResc("{{ ir_default_res }}","null"); }'
    backup: true
  become: true

- name: Increase systcl limits to allow longer transfers
  ansible.builtin.copy:
    src: '{{ role_path }}/files/tcp_keepalive.conf'
    dest: /etc/sysctl.d/
    mode: 0644
  become: true

- name: Temporary bugfix of the faulty service file (to be removed in newer versions)
  ansible.builtin.lineinfile:
    name: /etc/init.d/irods
    search_string: 'rm /var/lock/subsys/irods'
    line: 'rm -f /var/lock/subsys/irods'
  become: true
  notify: irodsctl_restart

- name: Fix the s3 authentication by creating dummy s3auth file
  ansible.builtin.copy:
    content: |
      foo
      bar
    dest: /etc/irods/.s3auth
    force: true
    mode: 0644
    owner: '{{ ir_service_account }}'
    group: '{{ ir_service_account }}'
  become_user: '{{ ir_service_account }}'
  become: true
  notify: irodsctl_restart

- name: Force all services to restart, before we start using iRODS imeta commands
  ansible.builtin.meta: flush_handlers

...
