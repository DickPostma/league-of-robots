---
- name: Compile list of volumes to mount for NFS servers.
  ansible.builtin.set_fact:
    volumes: "{{ volumes | default([]) + [volume] }}"
  vars:
    volume:
      mount_point: "/mnt/{{ item['pfs'] }}"
      device: "{{ item['device'] }}"
      mounted_owner: root
      mounted_group: root
      mounted_mode: '0755'
      mount_options: 'rw,relatime'
      type: ext4
  when: inventory_hostname in groups['nfs_server'] | default([])
  with_items: "{{ pfs_mounts | selectattr('type', 'search', 'nfs') | selectattr('device', 'defined') | list }}"

- name: Check the file system type of the device.
  ansible.builtin.command: "lsblk -n -o FSTYPE {{ item.device }}"
  register: device_status
  changed_when: false
  loop: "{{ volumes }}"

- name: Check the mount point.
  ansible.builtin.command: "mountpoint {{ item['mount_point'] }}"
  register: mount_point_status
  failed_when: mount_point_status.rc not in [0, 32]
  changed_when: false
  loop: "{{ volumes }}"

- name: Create a filesystem on the device.
  community.general.filesystem:
    fstype: "{{ item['type'] }}"
    dev: "{{ item['device'] }}"
    force: false
    resizefs: true
  when:
    #
    # Nothing is mounted at the mount point
    # and when the device is unformatted.
    #
    - mount_point_status['results']
          | selectattr('item', 'equalto', item)
          | map(attribute='rc')
          | first
          != 0
    - device_status['results']
          | selectattr('item', 'equalto', item)
          | map(attribute='stdout')
          | first
          != item['type']
  become: true
  loop: "{{ volumes }}"

- name: Mount the volume.
  ansible.builtin.include_tasks:
    file: mount.yml
  vars:
    volume_path: "{{ item.mount_point }}"
    volume_src: "{{ item.device }}"
    volume_fstype: "{{ item.type }}"
    volume_opts: "{{ item.mount_options }}"
    volume_device: "{{ item.device }}"
  loop: "{{ volumes }}"

- name: Recheck the mount point.
  ansible.builtin.command: "mountpoint {{ item.mount_point }}"
  register: mount_point_status
  failed_when: false
  changed_when: false
  loop: "{{ volumes }}"

- name: Configure permissions for mounted file system.
  ansible.builtin.file:
    path: "{{ item.item.mount_point }}"
    state: directory
    owner: "{{ item.item.mounted_owner }}"
    group: "{{ item.item.mounted_group }}"
    mode: "{{ item.item.mounted_mode }}"
  when: item.rc == 0
  become: true
  loop: "{{ mount_point_status.results }}"

- name: Create group folders on volumes.
  ansible.builtin.include_tasks:
    file: create_group_folders.yml
  vars:
    mount_point: "{{ item.1.mount_point }}"
    folders: "{{ item.1.groups | list }}"
    mode: "{{ item.1.mode }}"
  when:
    - volume_group_folders is defined
    - item.0.mount_point == item.1.mount_point
    - inventory_hostname in item.1.machines
  loop: "{{ volumes | product(volume_group_folders) | list }}"
...
