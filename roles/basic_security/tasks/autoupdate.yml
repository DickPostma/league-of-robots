---
- name: Set correct automatic update utility vars (RHEL >= 8).
  ansible.builtin.set_fact:
    update_utility: dnf-automatic
    update_service: dnf-automatic-install.timer
    update_conf_path: /etc/dnf/automatic.conf
  when: ansible_distribution_major_version | int >= 8

- name: Set correct automatic update utility vars (RHEL <= 7).
  ansible.builtin.set_fact:
    update_utility: yum-cron
    update_service: yum-cron
    update_conf_path: /etc/yum/yum-cron.conf
  when: ansible_distribution_major_version | int <= 7

- name: Install automatic update utility.
  ansible.builtin.package:
    name: "{{ update_utility }}"
    state: present
  become: true

- name: Ensure automatic update utility is running and enabled on boot.
  ansible.builtin.service:
    name: "{{ update_service }}"
    state: started
    enabled: true
  become: true

- name: Configure autoupdates.
  ansible.builtin.lineinfile:
    dest: "{{ update_conf_path }}"
    regexp: '^apply_updates = .+'
    line: 'apply_updates = yes'
    mode: '0644'
  become: true
  when:
    - basic_security_autoupdate_enabled

- name: Ignore in case that one package cannot be updated to highest version, and instead continue to update all the rest (RHEL >= 8).
  ansible.builtin.lineinfile:
    dest: "/etc/dnf/dnf.conf"
    regexp: '^best=.+'
    line: 'best=False'
    mode: '0644'
  when: ansible_distribution_major_version | int >= 8
  become: true
...
