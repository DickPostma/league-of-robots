---
- name: 'Gather facts from servers in "sys-admin-interface" group.'
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['sys-admin-interface'] }}"

- name: 'Include Slurm defaults from "slurm-management" role.'
  include_vars:
    file: '../../slurm-management/defaults/main.yml'
    name: 'slurm'

- name: 'Add Slurm group.'
  group:
    name: 'slurm'
    gid: "{{ slurm['slurm_gid'] }}"
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Add Munge group.'
  group:
    name: 'munge'
    gid: "{{ slurm['munge_gid'] }}"
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Add Slurm user.'
  user:
    name: 'slurm'
    uid: "{{ slurm['slurm_uid'] }}"
    group: 'slurm'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Add Munge user.'
  user:
    name: 'munge'
    uid: "{{ slurm['munge_uid'] }}"
    group: 'munge'
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Install the Slurm client with yum.'
  yum:
    state: 'installed'
    update_cache: yes
    allow_downgrade: yes
    name:
      - "slurm*{{ slurm_version }}"
      - "slurm-slurmd*{{ slurm_version }}"
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Patch slurm daemon systemd service files to use custom sub dir for PID files.'
  lineinfile:
    path: "/usr/lib/systemd/system/{{ item }}.service"
    regexp: '^PIDFile='
    line: "PIDFile=/var/run/slurm/{{ item }}.pid"
  with_items:
    - 'slurmd'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Install NHC with yum.'
  yum:
    state: 'latest'
    update_cache: yes
    name:
      - 'lbnl-nhc'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Install munge_keyfile.'
  copy:
    src: "roles/slurm-management/files/{{ slurm_cluster_name }}_munge.key"
    owner: 'munge'
    group: 'munge'
    mode: '0600'
    dest: '/etc/munge/munge.key'
  notify:
    - 'restart_munge'
    - 'restart_slurmd'
  become: true

- name: 'Create folders for Slurm and NHC.'
  file:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    state: 'directory'
  with_items:
    - name: '/etc/slurm'
      owner: 'root'
      group: 'root'
      mode: '0755'
    - name: '/etc/nhc'
      owner: 'root'
      group: 'root'
      mode: '0755'
    - name: '/var/log/slurm'
      owner: 'slurm'
      group: 'root'
      mode: '0750'
    - name: '/var/spool/slurm'
      owner: 'slurm'
      group: 'root'
      mode: '0750'
    - name: '/var/spool/slurmd'
      owner: 'root'
      group: 'root'
      mode: '0755'
    - name: '/var/run/slurm'
      owner: 'slurm'
      group: 'root'
      mode: '0775'
  become: true

- name: 'Deploy slurm prolog/epilog scripts.'
  copy:
    src: "roles/slurm-management/files/{{ item }}"
    dest: '/etc/slurm/'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - 'slurm.prolog'
    - 'slurm.epilog'
    - 'slurm.taskprolog'
  become: true

- name: 'Deploy slurm.conf.'
  template:
    src: 'roles/slurm-management/templates/slurm.conf'
    dest: '/etc/slurm/slurm.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'restart_slurmd'
  become: true

- name: 'Configure cgroups.'
  copy:
    src: 'roles/slurm-management/files/cgroup.conf'
    dest: '/etc/slurm/cgroup.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'reload_slurmd'
  become: true

- name: 'Deploy UI nhc.conf.'
  template:
    src: 'templates/user-interface_nhc.conf'
    dest: '/etc/nhc/nhc.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: inventory_hostname in groups['user-interface']
  become: true

- name: 'Deploy compute-vm nhc.conf.'
  template:
    src: 'templates/compute-vm_nhc.conf'
    dest: '/etc/nhc/nhc.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: inventory_hostname in groups['compute-vm']
  become: true

- name: 'Start slurm and munge services.'
  systemd:
    name: "{{ item }}"
    enabled: 'yes'
    state: 'started'
    daemon_reload: 'yes'
  with_items:
    - 'munge.service'
    - 'slurmd.service'
  become: true

- name: 'Allow passwordless sudo to slurm user for users in the functional_admins_group.'
  template:
    src: 'roles/slurm-management/templates/91-slurm'
    dest: "/etc/sudoers.d/91-slurm"
    owner: 'root'
    group: 'root'
    mode: '0440'
  when: functional_admin_group is defined and functional_admin_group | length >= 1
  become: true
...
