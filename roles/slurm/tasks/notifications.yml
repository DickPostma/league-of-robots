---
- name: Install Slurm notification dependencies with yum.
  ansible.builtin.package:
    state: 'latest'
    update_cache: true
    name:
      - curl
  become: true

- name: Create folder for Slurm notification scripts.
  ansible.builtin.file:
    name: '/etc/slurm/notification_scripts'
    owner: root
    group: slurm
    mode: '0750'
    state: directory
  become: true

- name: Install notification scripts.
  ansible.builtin.template:
    src: "templates/notification_scripts/{{ item }}"
    dest: '/etc/slurm/notification_scripts/'
    owner: root
    group: slurm
    mode: '0750'
  loop:
    - nodes.bash
    - management.bash
  become: true

- name: Flush handlers.
  ansible.builtin.meta: flush_handlers

- name: Configure slurm triggers.
  ansible.builtin.command:
    cmd: |
         strigger --set --flags=perm {{ item['state'] }} -p "/etc/slurm/notification_scripts/{{ item['program'] }}"
  register: slurm_strigger_result
  failed_when:
    - slurm_strigger_result.rc != 0
    - "'Duplicate' not in slurm_strigger_result.stderr"
  changed_when: slurm_strigger_result.rc == 0
  loop:
    - state: '--down'
      program: nodes.bash
    - state: '--fail'
      program: nodes.bash
    - state: '--draining'
      program: nodes.bash
    - state: '--drained'
      program: nodes.bash
    - state: '--resume'
      program: nodes.bash
    - state: '--up'
      program: nodes.bash
    - state: '--primary_slurmctld_acct_buffer_full'
      program: management.bash
    - state: '--primary_slurmctld_failure'
      program: management.bash
    - state: '--primary_database_failure'
      program: management.bash
    - state: '--primary_slurmdbd_failure'
      program: management.bash
  become: true
  become_user: slurm
...
