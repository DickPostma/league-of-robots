#### MODULES ####

# The imjournal module bellow is now used as a message source instead of imuxsock.
$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imjournal # provides access to the systemd journal
#$ModLoad imklog # reads kernel messages (the same are read from journald)
#$ModLoad immark  # provides --MARK-- message capability

# Provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# Provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

#### GLOBAL DIRECTIVES ####

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.
$OmitLocalLogging on

# File to store the position in the journal
$IMJournalStateFile imjournal.state



#### RULES ####

template(name="DynMessages" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/messages-%$DAY%")
template(name="DynSecure" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/secure-%$DAY%")
template(name="DynMaillog" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/maillog-%$DAY%")
template(name="DynCron" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/cron-%$DAY%")
template(name="DynSpooler" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/spooler-%$DAY%")
template(name="DynBootLog" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/boot.log-%$DAY%")

ruleset(name="remote_rule"){
    if prifilt("authpriv.*") then {
       action(type="omfile"  dynaFile="DynSecure" dirCreateMode="0755" )
    } else if prifilt("mail.*") then {
       action(type="omfile"  dynaFile="DynMaillog" dirCreateMode="0755" )
    } else if prifilt("cron.*") then {
       action(type="omfile"  dynaFile="DynCron" dirCreateMode="0755" )
    } else if prifilt("uucp,news.crit") then {
       action(type="omfile"  dynaFile="DynSpooler" dirCreateMode="0755" )
    } else if prifilt("local7.*") then {
       action(type="omfile"  dynaFile="DynBootLog" dirCreateMode="0755" )
    } else {
       action(type="omfile"  dynaFile="DynMessages" dirCreateMode="0755" )
    }
}

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog

# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log



#### INCOMING SERVER SETTINGS #### 

# make gtls driver the default
$DefaultNetstreamDriver gtls

# certificate files
$DefaultNetstreamDriverCAFile {{ rsyslog_remote_path_cert_dir }}/{{ rsyslog_ca_cert_file }}
$DefaultNetstreamDriverCertFile {{ rsyslog_remote_path_cert_dir }}/{{ inventory_hostname }}.pem
$DefaultNetstreamDriverKeyFile {{ rsyslog_remote_path_key_dir }}/{{ inventory_hostname }}.key

$ModLoad imtcp # load TCP listener

$InputTCPServerStreamDriverMode 1 # run driver in TLS-only mode
$InputTCPServerStreamDriverAuthMode x509/certvalid
# start up listening on port defined by rsyslog_port variable or 514 by default
input(type="imtcp" port="{{ hostvars[inventory_hostname].rsyslog_port|default('514',true) }}" ruleset="remote_rule")
