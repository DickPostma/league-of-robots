---
- name: Get information on CA key on managed rsyslog server
  ansible.builtin.stat:
    path: "{{ rsyslog_remote_path_key_dir }}/{{ rsyslog_ca_key_file }}"
  register: ca_key_on_server
  become: true

- name: Get information on CA cert on managed rsyslog server
  ansible.builtin.stat:
    path: "{{ rsyslog_remote_path_cert_dir }}/{{ rsyslog_ca_cert_file }}"
  register: ca_cert_on_server
  become: true

- name: Generate CA key on managed rsyslog server
  ansible.builtin.command:
    certtool --generate-privkey --bits 4096
    --outfile {{ rsyslog_remote_path_key_dir }}/{{ rsyslog_ca_key_file }}
  register: ca_key_generate_result
  when: not ca_key_on_server.stat.exists  or ca_key_on_server.stat.size == 0
  failed_when: "'FAILED' in ca_key_generate_result.stderr"
  become: true

- name: Copy CA template to the managed rsyslog server
  ansible.builtin.template:
    src: roles/rsyslog_server/templates/ca.template
    dest: /tmp/ca.template
    mode: '0600'
  when: not ca_key_on_server.stat.exists

- name: Generate CA cert on managed rsyslog server
  ansible.builtin.command: >
    certtool --generate-self-signed --template /tmp/ca.template
     --load-privkey {{ rsyslog_remote_path_key_dir }}/{{ rsyslog_ca_key_file }}
     --outfile {{ rsyslog_remote_path_cert_dir }}/{{ rsyslog_ca_cert_file }}
  register: ca_cert_generate_result
  when: not ca_cert_on_server.stat.exists or ca_cert_on_server.stat.size == 0
  failed_when: "'FAILED' in ca_cert_generate_result.stderr"
  become: true
...
