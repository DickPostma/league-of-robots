---

# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    resource_class: small
    steps:
      - checkout
      - run: python --version
      - run: pip --version
      - run:
          name: install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install ansible
            pip install ansible-lint
            ansible-galaxy install -r requirements.yml
            ansible --version
            ansible-lint --version
      - run:
          name: run tests
          shell: /bin/bash
          command: |
            set -e
            set -u
            set -o pipefail
            . venv/bin/activate
            if [[ -n "${ANSIBLE_ROLES_PATH:-}" ]]; then
                export ANSIBLE_ROLES_PATH="${HOME}/.ansible/roles/:${ANSIBLE_ROLES_PATH}"
            else
                export ANSIBLE_ROLES_PATH="${HOME}/.ansible/roles/"
            fi
            if ansible-lint -p --nocolor *.yml > lint_results 2>&1; then
              lint_errors=0
            else
              cat lint_results
              #
              # Parse number of errors from:
              # Finished with [0-9][0-9]* failure(s), [0-9][0-9]* warning(s) on [0-9][0-9]* files
              #
              lint_status=$(grep '^Finished with' lint_results)
              lint_errors=$(echo "${lint_status}" | sed 's|^Finished with \([0-9][0-9]*\) failure.*|\1|')
            fi
            echo '###############################################'
            printf 'Counted %d ansible-lint error(s).\n' ${lint_errors}
            echo '###############################################'
            if (( ${lint_errors} > 0 )); then /bin/false; fi
...
