#
#   1.   $> cd git/league-of-robots
#   2. Create VM for Pulp with deploy-os_servers.yml playbook.
#   3. Fetch Ansible dependencies
#        $> ansible-galaxy install -r galaxy-requirements.yml
# Configure this repo for deployment of a specifc HPC cluster.
#   4. Source lor-init from this repo. E.g.:
#        $> source ./lor-init
#   5. Configure League of Robots for a specific cluster. E.g.:
#        $> lor-config nibbler
#   6. Execute playbook to deploy Pulp. E.g.:
#        $> ansible-playbook -i inventory.py -u <admin> deploy-pulp_server.yml
#
---
- name: 'Sanity checks before we start.'
  hosts: repo
  pre_tasks:
    - name: 'Verify Ansible version meets requirements.'
      assert:
        that: "ansible_version.full is version_compare('2.10', '>=')"
        msg: 'You must update Ansible to at least 2.10.x to use this playbook.'
- name: 'Satisfy dependencies for and install Pulp.'
  hosts: repo
  vars:
    pulp_default_admin_password: password
    pulp_install_plugins:
      # galaxy-ng: {}
      # pulp-2to3-migration: {}
      # pulp-ansible: {}
      # pulp-certguard: {}
      # pulp-container: {}
      # pulp-cookbook: {}
      # pulp-deb: {}
      pulp-file: {}
      # pulp-gem: {}
      # pulp-maven: {}
      # pulp-npm: {}
      # pulp-python: {}
      pulp-rpm: {}
    pulp_settings:
      secret_key: secret
      content_origin: "{{ pulp_webserver_disable_https | default(false) | ternary('http', 'https') }}://{{ ansible_fqdn }}"
    pulp_root_cert_path_on_repo_server: "/etc/pulp/certs/root.crt"
    pulp_root_cert_path_on_control_host: "{{ playbook_dir }}/files/{{ slurm_cluster_name }}_cluster/\
                                          {{ inventory_hostname | regex_replace('^' + ai_jumphost + '\\+','') }}_pulp_root.crt"
  environment:
    DJANGO_SETTINGS_MODULE: pulpcore.app.settings
  roles:
    - admin_users
    - ssh_host_signer
    - ssh_known_hosts
    - {role: geerlingguy.repo-epel, become: true}
    - logins
    - static_hostname_lookup
    - sshd
    - {role: geerlingguy.security, become: true}
    - update
    - pulp.pulp_installer.pulp_all_services
  tasks:
    - name: Get checksum of Pulp root certificate on repo server.
      stat:
        path: "{{ pulp_root_cert_path_on_repo_server }}"
        checksum_algorithm: sha1
      register: repo_server_pulp_root_certificate
      become: true
    - name: Checking if Pulp root certificate must be updated.
      debug:
        msg: |
             ***********************************************************************************************************
             IMPORTANT: Manual work!
                        The Pulp root certificate on the Pulp repo server in:
                            {{ pulp_root_cert_path_on_repo_server }}
                        Differs from the Pulp root certificate on the Ansible control host in:
                            {{ pulp_root_cert_path_on_control_host }}
                        Check which one is correct and update the other one.
             ***********************************************************************************************************
      when:  repo_server_pulp_root_certificate.stat.checksum | default('Missing Pulp root certificate checksum on repo server', true) != 
             lookup('unvault', pulp_root_cert_path_on_control_host) | hash('sha1')
...
